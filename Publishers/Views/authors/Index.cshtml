@model IEnumerable<Publishers.Models.author>

    @{
    ViewBag.Title = "Index";
    
    
    }

    <h2>Liste des auteurs</h2>

    <form action="" method="post" id="formRecherche">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Nom de l'auteur", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBox("nomAuteur", "", new { htmlAttributes = new { @class = "form-control" } })
                @Html.Label("Commence par ") @Html.RadioButton("typeRecherche",1,true)
                @Html.Label("Contient ") @Html.RadioButton("typeRecherche", 2)

                @*Gestion de la pagination*@
                <input type="hidden" name="PageCourante" id="PageCourante" value="@ViewBag.PageCourante" />
                <input type="hidden" name="PageCount" id="PageCount" value="@ViewBag.PageCount" />
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Recherche" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>
    @using PagedList.Mvc;

    @*Affichage des pages avec les boutons précédent, suivant, etc. Les boutons sont gérés par le script « liste.js »*@
    @Html.PagedListPager(Model as PagedList.IPagedList, page => "#")

    @*Affichage des résultats*@
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.au_lname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.au_fname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.city)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.state)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.zip)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.contract)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.au_lname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.au_fname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.city)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.state)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.zip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.contract)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.au_id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.au_id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.au_id })
                </td>
            </tr>
    }
    </table>

    @* Script pour la pagination *@

    @section scripts {
        <script src="/Scripts/Site/liste.js" type="text/javascript"></script>
    }
